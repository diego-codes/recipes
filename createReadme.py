#!/usr/bin/env python
''' Simple script to auto-generate the README.md file for a TIL project, here
    used for a personal cookbook repo. Credit to til-collective for this readme
    generator script.
    Apply as a git hook by running the following command in linux:
        cd .git/hooks/ && ln -s ../../createReadme.py pre-commit && cd -
    To auto-generate the README.md file, you can run
        ./createReadme.py > README.md
    If you are using git, you can install this script as a pre-commit git hook so
    that it is autogenerated on each commit.  Use the following command:
        cd .git/hooks/ && ln -s ../../createReadme.py pre-commit && cd -
    The `.vimrc` file for this project contains a function `CountRecipes` that can
    be invoked with `<leader>c`. This will do a substitution count of the
    current number of recipes and display the result in the command tray.
'''
from __future__ import print_function
import os
from pathlib import Path
import glob

HEADER = '''# Family recipes
This is a collection of recipes we've learned from our family and friends, or modified
from various cooking sites and apps.
'''

FOOTER = '''## Future recipes
There are a bunch of things we would love to add in the future. If you have a good recipe
for any of the following foods that we could experiment with, please send it our way!
- Pad thai
- Gumbo
- Lasagna
- Curries
- Burrito bowls
- Pasta fresca
- Tacos
- Chili
- Arepas
- Colombian ceviche
- Stir fries
- Sushi
- Wraps
- Nachos (like, real nachos)
- Enchiladas
- Elote

## Credits
- [til-collective/til-collective](https://github.com/til-collective/til-collective)
for autogenerating README

## License
&copy; 2023 Diego and Nic
This repository is licensed under the MIT license. See `LICENSE` for details.
'''


def get_list_of_categories():
    ''' Walk the current directory and get a list of all subdirectories at that
    level. These are the "categories" in which there are recipes.'''
    dirs = [x for x in os.listdir('.') if os.path.isdir(x) and '.git' not in x]
    return dirs


def get_title(recipe_file):
    ''' Read the file until we hit the first line that starts with a #
    indicating a title in markdown. We'll use that as the title for this
    entry. '''
    with open(recipe_file, encoding='UTF-8', errors='ignore') as _file:
        for line in _file:
            line = line.strip()
            if line.startswith('#'):
                return line[1:].lstrip()


def get_recipes(category):
    ''' For a given category, get the list of recipe titles. '''
    recipe_files = glob.glob(os.path.join(category, '*.md'))
    titles = [(get_title(fullname), fullname) for fullname in recipe_files if os.path.isfile(fullname)]
    return titles


def get_category_dict(category_names):
    categories = {}
    count = 0
    for category in category_names:
        titles = get_recipes(category)
        categories[category] = titles
        count += len(titles)
    return count, categories


def print_file(category_names, count, categories):
    content = f"{HEADER}\n"
    content += f"We currently have {count} recipes in this collection. For recipes in development, check out [this document](https://docs.google.com/document/d/1xt3ZELFwRy-5zbsjgJlqxuL6pR6px2PWvsmN4Wd8rmI/edit?usp=sharing).\n\n"
    content += "---\n"
    content += "### Categories\n"

    for category in sorted(category_names):
        content += f"* [{category.capitalize().replace('-', ' ')}](#{category})\n"

    content += "---\n"

    for category in sorted(category_names):
        content += f"### {category.capitalize().replace('-', ' ')}\n\n"
        recipes = categories[category]
        for (title, filename) in sorted(recipes):
            content += f"- [{title}]({filename})\n"
        content += "\n"

    content += FOOTER

    with open('README.md', 'w', encoding='UTF-8', errors='ignore') as file_:
        file_.write(content)
        print(f"Generated README successfully with {count} recipes")


def create_readme():
    ''' Create a recipe README.md file with a nice index for using it directly
        from github. '''
    category_names = get_list_of_categories()
    count, categories = get_category_dict(category_names)
    print_file(category_names, count, categories)


if __name__ == '__main__':
    create_readme()
    os.system('git add README.md')